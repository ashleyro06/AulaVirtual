{"remainingRequest":"/Users/ashleyguevara/Projects/AulaVirtual/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ashleyguevara/Projects/AulaVirtual/frontend/src/components/General/RandomImage.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/ashleyguevara/Projects/AulaVirtual/frontend/src/components/General/RandomImage.vue","mtime":1588135050682},{"path":"/Users/ashleyguevara/Projects/AulaVirtual/frontend/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ashleyguevara/Projects/AulaVirtual/frontend/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ashleyguevara/Projects/AulaVirtual/frontend/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ashleyguevara/Projects/AulaVirtual/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ashleyguevara/Projects/AulaVirtual/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYS1jYW52YXMgewogIG1pbi1oZWlnaHQ6IDExOHB4OwogIG1heC1oZWlnaHQ6IDIwMHB4OwogIGJvcmRlcjogMCAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["RandomImage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;AACA;AACA","file":"RandomImage.vue","sourceRoot":"src/components/General","sourcesContent":["<template>\n  <canvas style=\"border:1px solid #BBB;\" ref=\"a_image\" class=\"a-canvas\"></canvas>\n</template>\n\n<script>\nexport default {\n  name: \"RandomImage\",\n  methods: {\n    canvasImage: function() {\n      let canvas = this.$refs.a_image;\n      let ctx = canvas.getContext(\"2d\");\n      ctx.clearRect(0, 0, 400, 400);\n\n      let options = {\n        width: canvas.width,\n        height: canvas.height,\n        colorsBack: [\"#a1b1d9\", \"#b6def2\", \"#d3d3d3\"], //amarillo, azul, rojo\n        colorsMain: [\n          \"#201c71\", //Color logo\n          \"#123960\", //Amarillo\n          \"#6e86bc\", //Azul oscuro\n          \"#555281\" //Naranja\n        ],\n        shapeDensity: 2,\n        shapeSpread: 0.3\n      };\n\n      this.drawImage(ctx, options);\n    },\n    getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min + 1) + min);\n    },\n    drawImage(ctx, settings) {\n      var bgCol =\n        settings.colorsBack[\n          Math.floor(Math.random() * settings.colorsBack.length)\n        ];\n      ctx.fillStyle = bgCol;\n      ctx.fillRect(0, 0, settings.width, settings.height);\n\n      var _shapeFunctions = [this.__drawTriangle, this.__drawCircle];\n      for (var i = 0, l = settings.shapeDensity; i < l; i++) {\n        // get three random points on the canvas\n        _shapeFunctions[this.getRandomInt(0, _shapeFunctions.length - 1)](\n          ctx,\n          settings\n        );\n      }\n    },\n    __drawTriangle(ctx, settings) {\n      var pts = [];\n      for (var j = 0; j < 3; j++) {\n        var pX = this.getRandomInt(\n          (-settings.width / 2) * settings.shapeSpread,\n          settings.width + (settings.width / 2) * settings.shapeSpread\n        );\n        var pY = this.getRandomInt(\n          (-settings.height / 2) * settings.shapeSpread,\n          settings.height + (settings.height / 2) * settings.shapeSpread\n        );\n        pts[j] = { x: pX, y: pY };\n      }\n\n      // draw triangle\n      ctx.fillStyle =\n        settings.colorsMain[\n          Math.floor(Math.random() * settings.colorsMain.length)\n        ];\n      ctx.beginPath();\n      ctx.moveTo(pts[0].x, pts[0].y);\n      ctx.lineTo(pts[1].x, pts[1].y);\n      ctx.lineTo(pts[2].x, pts[2].y);\n      ctx.fill();\n    },\n    __drawCircle(ctx, settings) {\n      // get circle coordinates and radius\n      var pX = this.getRandomInt(0, settings.width);\n      var pY = this.getRandomInt(0, settings.height);\n      var pR = this.getRandomInt(1, Math.min(settings.width, settings.height));\n\n      // draw circle\n      ctx.fillStyle =\n        settings.colorsMain[\n          this.getRandomInt(0, settings.colorsMain.length - 1)\n        ];\n      ctx.beginPath();\n      ctx.arc(pX, pY, pR, 0, Math.PI * 2, true);\n      ctx.closePath();\n      ctx.fill();\n    }\n  },\n  mounted() {\n    this.canvasImage();\n  }\n};\n</script>\n\n<style>\n.a-canvas {\n  min-height: 118px;\n  max-height: 200px;\n  border: 0 !important;\n}\n</style>"]}]}